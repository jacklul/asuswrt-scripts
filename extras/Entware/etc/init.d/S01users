#!/bin/sh
# /opt/etc/init.d/S01users
# This script allows easy creation of users for services that require them

users="" # Space separated list of users to create
min_uid=1001 # On AsusWRT users added from fileshare UI start at 501, 'asd' sometimes switches to UID 1000 so 1001 should be safe value to use

##################################################

#shellcheck disable=SC2155
readonly config="/opt/etc/init.d/$(basename "$0").conf"
if [ -f "$config" ]; then
    #shellcheck disable=SC1090
    . "$config"
fi

is_uid_in_use() {
    for _test_uid in $2; do
        if [ "$_test_uid" -eq "$1" ]; then
            return 0
        fi
    done

    return 1
}

case $1 in
    start|restart|reconfigure)
        tag="$(basename "$0")"

        for new_user in $users; do
            if ! grep -q "$new_user:" /opt/etc/passwd; then
                used_uids=$(cut -d: -f3 /opt/etc/passwd)
                next_uid=$min_uid

                while is_uid_in_use "$next_uid" "$used_uids"; do
                    next_uid=$((next_uid + 1))
                done

                logger -st "$tag" "Adding user '$new_user' with UID $next_uid..."

                echo "$new_user:x:$next_uid:$next_uid::/dev/null:/dev/null" >> /opt/etc/passwd
                echo "$new_user:x:$next_uid:" >> /opt/etc/group
                echo "$new_user:*:0:0:99999:7:::" >> /opt/etc/shadow
                echo "$new_user:*::" >> /opt/etc/gshadow
            fi
        done
    ;;
    stop|kill)
        # Do nothing as processes might be already running as those users
        echo "Action '$1' is not supported."
    ;;
    check)
        for new_user in $users; do
            if ! grep -q "$new_user:" /opt/etc/passwd; then
                echo "User $new_user is missing"
                echo "dead"
                exit 1
            fi
        done

        echo "alive"
    ;;
esac

# Some firmware events can rewrite these files so in order to fix that on stock firmware:
# - install service-event.sh script
# - set EXECUTE_COMMAND="/jffs/scripts/service-event-script.sh" in the service-event.conf
# - create the following executable script (/jffs/scripts/service-event-script.sh):
#
#  #!/bin/sh
#  # $1 = event, $2 = target
#  
#  [ -z "$2" ] && exit
#  
#  case "$1" in
#      "start"|"restart")
#          case "$2" in
#              "allnet"|"net"|"net_and_phy"|"ftpsamba"|"pms_account"|"chilli"|"CP"|"wlcmode"|"chpass"|"nasapps")
#                  if [ -f /opt/etc/init.d/S01users ]; then
#                      { sleep 5; /opt/etc/init.d/S01users restart; } &
#                  fi
#              ;;
#          esac
#      ;;
#  esac
#
# On Merlin firmware you can insert the whole case code into /jffs/scripts/service-event-end script
#
