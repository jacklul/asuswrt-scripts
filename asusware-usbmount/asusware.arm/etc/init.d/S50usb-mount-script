#!/bin/sh
# Made by Jack'lul <jacklul.github.io>
#
# This script will be called when a USB drive is mounted.
# Receiving 'stop' here (on unmount) is unlikely, possibly only
# when "safely ejecting" the drive through the web UI.
#

tag="$(basename "$0")"

case "$1" in
    "start")
        nvram_script="$(nvram get script_usbmount)"

        if [ -n "$nvram_script" ]; then
            command="$nvram_script"
        elif [ -x /jffs/scripts/usb-mount-script ]; then
            command=/jffs/scripts/usb-mount-script
        elif [ -x "/jffs/scripts/scripts-startup.sh" ]; then
            command="/jffs/scripts/scripts-startup.sh start"
        elif [ -x "/jffs/scripts-startup.sh" ]; then
            command="/jffs/scripts-startup.sh start"
        fi

        if [ -n "$command" ]; then
            logger -t "$tag" "Executing command: $command"
            eval "$command" &
        fi

        # This allows the USB drive to be unplugged and then plugged back in to retrigger this
        # script again. Without this, router will not call this script again until a reboot.
        # "USB Application" in the web UI will also be stuck on "apps installing" without this fix.
        {
            sleep 15
            nvram set apps_state_autorun=
            nvram set apps_state_install=
            nvram set apps_state_remove=
            nvram set apps_state_switch=
            nvram set apps_state_stop=
            nvram set apps_state_enable=
            nvram set apps_state_update=
            nvram set apps_state_upgrade=
            nvram set apps_state_cancel=
            nvram set apps_state_error=
            nvram set apps_state_action=
            nvram set apps_mounted_path=
            nvram set apps_dev=
            # nvram commit not needed!
        } >/dev/null 2>&1 &
    ;;
    "stop")
        nvram_script="$(nvram get script_usbumount)"

        if [ -n "$nvram_script" ]; then
            command="$nvram_script"
        elif [ -x /jffs/scripts/usb-umount-script ]; then
            command=/jffs/scripts/usb-umount-script
        fi

        if [ -n "$command" ]; then
            logger -t "$tag" "Executing command: $command"
            eval "$command" &
        fi
    ;;
esac
